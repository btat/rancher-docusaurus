"use strict";(self.webpackChunkrancher_docusaurus=self.webpackChunkrancher_docusaurus||[]).push([[33952],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(t),h=o,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||s;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,i=new Array(s);i[0]=p;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var c=2;c<s;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},99362:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=t(87462),o=t(63366),s=(t(67294),t(3905)),i=["components"],a={title:"Roles for Nodes in Kubernetes",position:1},l=void 0,c={unversionedId:"cluster-provisioning/production/nodes-and-roles",id:"version-2.4.15/cluster-provisioning/production/nodes-and-roles",isDocsHomePage:!1,title:"Roles for Nodes in Kubernetes",description:"This section describes the roles for etcd nodes, controlplane nodes, and worker nodes in Kubernetes, and how the roles work together in a cluster.",source:"@site/versioned_docs/version-2.4.15/cluster-provisioning/production/nodes-and-roles.md",sourceDirName:"cluster-provisioning/production",slug:"/cluster-provisioning/production/nodes-and-roles",permalink:"/rancher-docusaurus/cluster-provisioning/production/nodes-and-roles",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/versioned_docs/version-2.4.15/cluster-provisioning/production/nodes-and-roles.md",tags:[],version:"2.4.15",frontMatter:{title:"Roles for Nodes in Kubernetes",position:1},sidebar:"version-2.4.15/tutorialSidebar",previous:{title:"Checklist for Production-Ready Clusters",permalink:"/rancher-docusaurus/cluster-provisioning/production/index"},next:{title:"Recommended Cluster Architecture",permalink:"/rancher-docusaurus/cluster-provisioning/production/recommended-architecture"}},u=[{value:"kube-apiserver",id:"kube-apiserver",children:[]},{value:"kube-controller-manager",id:"kube-controller-manager",children:[]},{value:"kube-scheduler",id:"kube-scheduler",children:[]}],d={toc:u};function p(e){var n=e.components,t=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This section describes the roles for etcd nodes, controlplane nodes, and worker nodes in Kubernetes, and how the roles work together in a cluster."),(0,s.kt)("p",null,"This diagram is applicable to Kubernetes clusters ",(0,s.kt)("a",{parentName:"p",href:"https://rancher.com/docs/rancher/v2.6/en/cluster-provisioning/rke-clusters/"},"launched with Rancher using RKE."),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-img"},"![Cluster diagram](./assets/img/rancher/clusterdiagram.svg)\n\\<sup\\>Lines show the traffic flow between components. Colors are used purely for visual aid\\</sup\\>\n")),(0,s.kt)("h1",{id:"etcd"},"etcd"),(0,s.kt)("p",null,"Nodes with the ",(0,s.kt)("inlineCode",{parentName:"p"},"etcd")," role run etcd, which is a consistent and highly available key value store used as Kubernetes\u2019 backing store for all cluster data. etcd replicates the data to each node."),(0,s.kt)("p",null,">",(0,s.kt)("strong",{parentName:"p"},"Note:")," Nodes with the ",(0,s.kt)("inlineCode",{parentName:"p"},"etcd")," role are shown as ",(0,s.kt)("inlineCode",{parentName:"p"},"Unschedulable")," in the UI, meaning no pods will be scheduled to these nodes by default."),(0,s.kt)("h1",{id:"controlplane"},"controlplane"),(0,s.kt)("p",null,"Nodes with the ",(0,s.kt)("inlineCode",{parentName:"p"},"controlplane")," role run the Kubernetes master components (excluding ",(0,s.kt)("inlineCode",{parentName:"p"},"etcd"),", as it's a separate role). See ",(0,s.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/overview/components/#master-components"},"Kubernetes: Master Components")," for a detailed list of components."),(0,s.kt)("p",null,">",(0,s.kt)("strong",{parentName:"p"},"Note:")," Nodes with the ",(0,s.kt)("inlineCode",{parentName:"p"},"controlplane")," role are shown as ",(0,s.kt)("inlineCode",{parentName:"p"},"Unschedulable")," in the UI, meaning no pods will be scheduled to these nodes by default."),(0,s.kt)("h3",{id:"kube-apiserver"},"kube-apiserver"),(0,s.kt)("p",null,"The Kubernetes API server (",(0,s.kt)("inlineCode",{parentName:"p"},"kube-apiserver"),") scales horizontally. Each node with the role ",(0,s.kt)("inlineCode",{parentName:"p"},"controlplane")," will be added to the NGINX proxy on the nodes with components that need to access the Kubernetes API server. This means that if a node becomes unreachable, the local NGINX proxy on the node will forward the request to another Kubernetes API server in the list."),(0,s.kt)("h3",{id:"kube-controller-manager"},"kube-controller-manager"),(0,s.kt)("p",null,"The Kubernetes controller manager uses leader election using an endpoint in Kubernetes. One instance of the ",(0,s.kt)("inlineCode",{parentName:"p"},"kube-controller-manager")," will create an entry in the Kubernetes endpoints and updates that entry in a configured interval. Other instances will see an active leader and wait for that entry to expire (for example, when a node is unresponsive)."),(0,s.kt)("h3",{id:"kube-scheduler"},"kube-scheduler"),(0,s.kt)("p",null,"The Kubernetes scheduler uses leader election using an endpoint in Kubernetes. One instance of the ",(0,s.kt)("inlineCode",{parentName:"p"},"kube-scheduler")," will create an entry in the Kubernetes endpoints and updates that entry in a configured interval. Other instances will see an active leader and wait for that entry to expire (for example, when a node is unresponsive)."),(0,s.kt)("h1",{id:"worker"},"worker"),(0,s.kt)("p",null,"Nodes with the ",(0,s.kt)("inlineCode",{parentName:"p"},"worker")," role run the Kubernetes node components. See ",(0,s.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/overview/components/#node-components"},"Kubernetes: Node Components")," for a detailed list of components."),(0,s.kt)("h1",{id:"references"},"References"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/overview/components/#node-components"},"Kubernetes: Node Components"))))}p.isMDXComponent=!0}}]);