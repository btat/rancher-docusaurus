"use strict";(self.webpackChunkrancher_docusaurus=self.webpackChunkrancher_docusaurus||[]).push([[86245],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(t),h=o,k=d["".concat(l,".").concat(h)]||d[h]||p[h]||a;return t?r.createElement(k,c(c({ref:n},u),{},{components:t})):r.createElement(k,c({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=t[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},73172:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),c=["components"],i={title:"Rancher HA",position:104},l=void 0,s={unversionedId:"troubleshooting/rancherha",id:"troubleshooting/rancherha",isDocsHomePage:!1,title:"Rancher HA",description:"The commands/steps listed on this page can be used to check your Rancher Kubernetes Installation.",source:"@site/docs/troubleshooting/rancherha.md",sourceDirName:"troubleshooting",slug:"/troubleshooting/rancherha",permalink:"/rancher-docusaurus/next/troubleshooting/rancherha",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/troubleshooting/rancherha.md",tags:[],version:"current",frontMatter:{title:"Rancher HA",position:104},sidebar:"tutorialSidebar",previous:{title:"Networking",permalink:"/rancher-docusaurus/next/troubleshooting/networking"},next:{title:"User ID Tracking in Audit Logs",permalink:"/rancher-docusaurus/next/troubleshooting/userid-tracking-in-audit-logs"}},u=[{value:"Check Rancher pods",id:"check-rancher-pods",children:[]},{value:"Check ingress",id:"check-ingress",children:[]},{value:"Check ingress controller logs",id:"check-ingress-controller-logs",children:[]},{value:"Leader election",id:"leader-election",children:[]}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The commands/steps listed on this page can be used to check your Rancher Kubernetes Installation."),(0,a.kt)("p",null,"Make sure you configured the correct kubeconfig (for example, ",(0,a.kt)("inlineCode",{parentName:"p"},"export KUBECONFIG=$PWD/kube_config_rancher-cluster.yml"),")."),(0,a.kt)("h3",{id:"check-rancher-pods"},"Check Rancher pods"),(0,a.kt)("p",null,"Rancher pods are deployed as a Deployment in the ",(0,a.kt)("inlineCode",{parentName:"p"},"cattle-system")," namespace."),(0,a.kt)("p",null,"Check if the pods are running on all nodes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl -n cattle-system get pods -l app=rancher -o wide\n")),(0,a.kt)("p",null,"Example output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"NAME                       READY   STATUS    RESTARTS   AGE   IP          NODE\nrancher-7dbd7875f7-n6t5t   1/1     Running   0          8m    x.x.x.x     x.x.x.x\nrancher-7dbd7875f7-qbj5k   1/1     Running   0          8m    x.x.x.x     x.x.x.x\nrancher-7dbd7875f7-qw7wb   1/1     Running   0          8m    x.x.x.x     x.x.x.x\n")),(0,a.kt)("p",null,"If a pod is unable to run (Status is not ",(0,a.kt)("strong",{parentName:"p"},"Running"),", Ready status is not showing ",(0,a.kt)("inlineCode",{parentName:"p"},"1/1")," or you see a high count of Restarts), check the pod details, logs and namespace events.                                                                                                       "),(0,a.kt)("h4",{id:"pod-details"},"Pod details"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl -n cattle-system describe pods -l app=rancher\n")),(0,a.kt)("h4",{id:"pod-container-logs"},"Pod container logs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl -n cattle-system logs -l app=rancher\n")),(0,a.kt)("h4",{id:"namespace-events"},"Namespace events"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl -n cattle-system get events\n")),(0,a.kt)("h3",{id:"check-ingress"},"Check ingress"),(0,a.kt)("p",null,"Ingress should have the correct ",(0,a.kt)("inlineCode",{parentName:"p"},"HOSTS")," (showing the configured FQDN) and ",(0,a.kt)("inlineCode",{parentName:"p"},"ADDRESS")," (host address(es) it will be routed to)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl -n cattle-system get ingress\n")),(0,a.kt)("p",null,"Example output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"NAME      HOSTS                    ADDRESS                   PORTS     AGE\nrancher   rancher.yourdomain.com   x.x.x.x,x.x.x.x,x.x.x.x   80, 443   2m\n")),(0,a.kt)("h3",{id:"check-ingress-controller-logs"},"Check ingress controller logs"),(0,a.kt)("p",null,"When accessing your configured Rancher FQDN does not show you the UI, check the ingress controller logging to see what happens when you try to access Rancher:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl -n ingress-nginx logs -l app=ingress-nginx\n")),(0,a.kt)("h3",{id:"leader-election"},"Leader election"),(0,a.kt)("p",null,"The leader is determined by a leader election process. After the leader has been determined, the leader (",(0,a.kt)("inlineCode",{parentName:"p"},"holderIdentity"),") is saved in the ",(0,a.kt)("inlineCode",{parentName:"p"},"cattle-controllers")," ConfigMap (in this example, ",(0,a.kt)("inlineCode",{parentName:"p"},"rancher-7dbd7875f7-qbj5k"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'kubectl -n kube-system get configmap cattle-controllers -o jsonpath=\'{.metadata.annotations.control-plane\\.alpha\\.kubernetes\\.io/leader}\'\n{"holderIdentity":"rancher-7dbd7875f7-qbj5k","leaseDurationSeconds":45,"acquireTime":"2019-04-04T11:53:12Z","renewTime":"2019-04-04T12:24:08Z","leaderTransitions":0}\n')))}d.isMDXComponent=!0}}]);